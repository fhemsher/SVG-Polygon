<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>C604d - Convex Polygons - Bearing Lines</title>
  <script type="text/javascript" src="highlight.pack.js"></script>
  <script type="text/javascript" src="highlightCode.js"></script>
  <link href='highlight.css' rel='stylesheet' />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
</head>
<body style='padding:0px;font-family:arial;background:#f0f8ff'>
<center>
<h4>Convex Polygons - Bearing Lines</h4>
<div style='width:90%;background-color:gainsboro;text-align:justify;padding:10px;border-radius:10px;'>

Show line end <b>arrow marker</b> for CCW polygon points. Compute <b>start point</b>, and show the length and bearing of each side. Align the bearing values with side. Uses the <b>path element</b> with <b>textPath</b>. The path element has no stroke or fill, used only to support textPath.
<br />AZIMUTHS AND COMPASS QUADRANT BEARINGS - A bearing is a measurement of direction between two points. Bearings are generally given in one of two formats, an azimuth bearing or a compass quadrant bearing.

<center><table><tr><td><img src=azimuthBearing.png /></td><td><img src=compassQuadrant.png /></td></tr></table>
For this example, Azimuth Bearing degrees include decimal degrees. Compass-Quadrant Bearing show degrees(d), including minutes(') and seconds(").
</center></div>
<div id="svgDiv" style='width:400px;height:400px;'>
<svg xmlns:xlink="http://www.w3.org/1999/xlink"  xmlns="http://www.w3.org/2000/svg" id="mySVG" width="400" height="400">
<defs id="arrowDefs">
<marker colorId="RGB(0,0,0)" id="arrowEnd" viewBox="0 0 8000 8000" refX="280" refY="150"	markerUnits="strokeWidth" markerWidth="300" markerHeight="300" orient="auto"  fill="RGB(0,0,0)" stroke-linejoin="bevel" ><path stroke="RGB(0,0,0)" stroke-width="5" d="M2 59,293 148,1 243,121 151,Z" /></marker>
</defs>
<polygon id="myPolygon" fill="yellow" stroke="blue" stroke-width="1" points="380,80 200,10 40,80 100,320 300,350" />
</svg>
</div>
<br /><button onClick=showBearings()>Show Bearings</button>
 <br />  SVG Source:
  <div id=svgSourceDiv style=overflow:auto;width:100%;height:1px;text-align:left; /></div>
  Javascript:
  <div id=jsCodeDiv style=overflow:auto;width:100%;text-align:left; /></div>
</center>
<script id=myScript>
var NS="http://www.w3.org/2000/svg"

//---button---
function showBearings()
{
	var pointList=myPolygon.points
	var n=pointList.numberOfItems
	for(var k=0;k<n;k++)
	{
		var x1=pointList.getItem(k).x
		var y1=pointList.getItem(k).y
         //---show the start point of the arrow lines---
		if(k==0)
		{
			var startCircle=document.createElementNS(NS,"circle")
			startCircle.setAttribute("cx",x1)
			startCircle.setAttribute("cy",y1)
			startCircle.setAttribute("r",6)
			startCircle.setAttribute("stroke-width",2)
			startCircle.setAttribute("stroke","black")
			startCircle.setAttribute("fill","lime")
			mySVG.appendChild(startCircle)
		}
		if(k<n-1)
		{
			var x2=pointList.getItem(k+1).x
			var y2=pointList.getItem(k+1).y
		}
		else
		{
			var x2=pointList.getItem(0).x
			var y2=pointList.getItem(0).y
		}

		//---add line with end arrow--
		var line=document.createElementNS(NS,"line")
		line.setAttribute("x1",x1)
		line.setAttribute("y1",y1)
		line.setAttribute("x2",x2)
		line.setAttribute("y2",y2)
		line.setAttribute("stroke-width",2) //--determines arrow size--
		line.setAttribute("stroke","none")	//---line not shown--
		line.setAttribute("marker-end","url(#arrowEnd)")
		mySVG.appendChild(line)
        //--both azimuth and compass---
        bearingTextPaths(x1,y1,x2,y2)

	}

	showSourceSVG()
}

var Xlink='http://www.w3.org/1999/xlink'
var TextPathCnt=0
//----creates azimuth and compass bearings textPaths--
//---azimuth inside line, compass ouside---
function bearingTextPaths(x1,y1,x2,y2,lnRnd)
{
	TextPathCnt++
	//--aligns text so not upside down---
	if(x2>=x1)
	{
		var d="M"+x1+" "+y1+"L"+x2+" "+y2
		//--inside---
		var dyAz= "-.3em"
		//--outside---
		var dyCp= "1em"
	}
	else
	{
		var d="M"+x2+" "+y2+"L"+x1+" "+y1
        //--inside---
		var dyAz= "1em"
		//--outside---
		var dyCp= "-.3em"
	}
	//---side length---
	var ln=Math.sqrt( (x2-x1)*(x2-x1)+(y2-y1)*(y2-y1) )
	var lnRnd=Math.round(ln*100)/100

	var path=document.createElementNS(NS,"path")
	path.setAttribute("id","textPathPath"+TextPathCnt)
	path.setAttribute("d",d)
	path.setAttribute("fill","none")
	path.setAttribute("stroke","none")
	mySVG.appendChild(path)

    //---Azimuth---
	var myText=document.createElementNS(NS,"text")
	var textPath=document.createElementNS(NS,"textPath")
	textPath.setAttribute( "id","textPathAZ"+TextPathCnt)
	textPath.setAttributeNS(Xlink,"href","#textPathPath"+TextPathCnt)
	textPath.setAttribute("startOffset","50%")
	textPath.setAttribute("stroke","none")
	textPath.setAttribute("font-family","arial")
	textPath.setAttribute("fill","black")
	textPath.setAttribute("text-anchor","middle")
	textPath.setAttribute("font-size",14)
	myText.setAttribute("dy",dyAz)

    var azimuth=points2degAz(x1,y1,x2,y2)
	var azRnd=Math.round(azimuth*100)/100
	var textNode=document.createTextNode(lnRnd+" @ "+azRnd +" deg.")
	textPath.appendChild(textNode)

	myText.appendChild(textPath)
	mySVG.appendChild(myText)

    //---Compass---
	var myText=document.createElementNS(NS,"text")
	var textPath=document.createElementNS(NS,"textPath")
	textPath.setAttribute( "id","textPathCP"+TextPathCnt)
	textPath.setAttributeNS(Xlink,"href","#textPathPath"+TextPathCnt)
	textPath.setAttribute("startOffset","50%")
	textPath.setAttribute("stroke","none")
	textPath.setAttribute("font-family","arial")
	textPath.setAttribute("fill","black")
	textPath.setAttribute("text-anchor","middle")
	textPath.setAttribute("font-size",14)
	myText.setAttribute("dy",dyCp)

    var degAz=points2degAz(x1,y1,x2,y2)
	var compass=degAz2degComp(degAz)
	var textNode=document.createTextNode(lnRnd+" @ "+compass)
	textPath.appendChild(textNode)

	myText.appendChild(textPath)
	mySVG.appendChild(myText)
}

//---Azimith degrees using points at each  polygon side---
function points2degAz(x1,y1,x2,y2)
{
	var atan2=Math.atan2((y2-y1),(x2-x1))
	var svgDeg=atan2*57.2957795
	//===atan2 serves minus value at>270 deg---
	if(svgDeg<0)svgDeg=svgDeg+360

	if(svgDeg<=270)
		var degAz=90+svgDeg
	else
		var degAz=svgDeg-270

	return degAz
}

//---Compass requires azimuth---
function degAz2degComp(azDeg)
{
	if(azDeg<=0 || azDeg>=360 )
		return "Due North"
	else if(azDeg==90)
		return "Due East"
	else if(azDeg==180)
		return "Due South"
	else if(azDeg==270)
   		return "Due West"
	else
	{
		var deg=Math.floor(azDeg)
		var diffDeg=(azDeg-deg)
		var min=Math.floor(diffDeg*60)
		var sec=Math.round((diffDeg*60-min))

		var SN="N"
		var EW="E"
		var compassAng=0

		if(azDeg<90)
		{
			SN="N"
			compassAng=deg
			EW="E"
		}
		else if(azDeg>270)
		{
			SN="N"
			compassAng=360-deg
			EW="W"
		}
		else if(azDeg>90&&azDeg<180)
		{
			SN="S"
			compassAng=180-deg
			EW="E"
		}
		else if(azDeg>180&&azDeg<270)
		{
			SN="S"
			compassAng=deg-180
			EW="W"
		}

		return SN+compassAng+"d"+min+"'"+sec+"\""+EW
	}
}

</script>
<script>
document.addEventListener("onload",init(),false)

function init()
{
showSourceSVG()
showSourceJS()
}

</script>
</body>

</html>