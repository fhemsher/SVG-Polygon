<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>C0601b - Convex Polygons - Expand/Contract</title>
  <script type="text/javascript" src="highlight.pack.js"></script>
  <script type="text/javascript" src="highlightCode.js"></script>
  <link href='highlight.css' rel='stylesheet' />
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
</head>
<body style='font-family:arial;background:#f0f8ff'>
<center>
<h4>Convex Polygons - Expand/Contract</h4>
<div style='width:90%;background-color:gainsboro;text-align:justify;padding:10px;border-radius:8px;'>
Expand or contract the size of a convex polygon by a preset offset value. Each side of the polygon is offset by the selected value.
</div>
<div id="svgDiv" style='background-color:lightgreen;width:400px;height:400px;'>
<svg xmlns="http://www.w3.org/2000/svg"  id="mySVG" width="400" height="400">
<polygon id="myPolygon" fill="yellow" stroke="black" stroke-width="1" points="380,80 200,10 40,80 100,320 300,350" />
</svg>
</div>
<center>
    Offset(+/-)&nbsp;px.<input type="text" style="width:50px" id=offsetValue value=10 /><button onClick=resizeMyPolygon()>Resize Polygon</button>
</center>

 <br />  SVG Source:
  <div id=svgSourceDiv style=overflow:auto;width:100%;height:1px;text-align:left; /></div>
  Javascript:
  <div id=jsCodeDiv style=overflow:auto;width:100%;text-align:left; /></div>
</center>
<script id=myScript>

 //---button---
function resizeMyPolygon()
{
    var pointList=myPolygon.points
    //---clockwise or counterclockwise--
    function polygonArea() {
    var area = 0;
    for (var i = 0; i < pointList.length; i++) {
        j = (i + 1) % pointList.length;
        area += pointList.getItem(i).x * pointList.getItem(j).y;
        area -= pointList.getItem(j).x * pointList.getItem(i).y;
    }
    return area / 2;
    }
    var clockwise = polygonArea() > 0;  //---false is ccw points--

    var offset=parseFloat(offsetValue.value)

    if((offset>0&& clockwise==true)||(offset<0&&clockwise==false))
    {
        //--reverse polygon points---
        var pointArray=[]
        for(var k=0;k<pointList.numberOfItems;k++)
        {
            var lastPnt=pointList.getItem(k)
            pointArray.push([lastPnt.x,lastPnt.y])
        }
        pointArray.reverse()
        myPolygon.setAttribute("points",pointArray.join(" ") )
        pointList=myPolygon.points
    }


    var changedPoints=resizePolygon(pointList,offset,mySVG)
    myPolygon.setAttribute("points",changedPoints.join() )
    showSourceSVG()

}
function resizePolygon(pointsList,offset,rootSVG)
{
	var m=pointsList.numberOfItems
	//---first find centroid---
	var total_area = 0;
	var centroid = [0, 0];
	var a = pointsList.getItem(0);
	for (i = 0; i < m - 2; i++)
	{
		var b = pointsList.getItem(i + 1)
		var c = pointsList.getItem(i + 2);
		var area = 0.5 * Math.abs((a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y));
		total_area += area;
		centroid[0] += area * (a.x + b.x + c.x);
		centroid[1] += area * (a.y + b.y + c.y);
	}
	centroid[0] /= total_area * 3;
	centroid[1] /= total_area * 3;

	var points_offset = [];
	for (i = 0; i < m; i++)
	{
		//--- a-b is a line segment on the convex polygon---
		var a = pointsList.getItem(i);
		var b = pointsList.getItem(i == m - 1 ? 0 : i + 1);

		//---Determine the normal to the line segment---
		var slope = -1 / ((b.y - a.y) / (b.x - a.x));

		//---Construct a new line d--e that is the line a--b shifted 'offset'---
		//---units in the direction of the normal---
		var w, h;
		if (a.y == b.y)
			w = 0;
		else
	   		w = (a.y < b.y ? -1 : 1) * Math.sqrt(offset * offset / (1 + slope * slope));

		if (w == 0)
			h = (a.x > b.x ? -1 : 1) * offset;
		else
			h = slope * w;

		//---root svg element---
		var d=rootSVG.createSVGPoint()
		var e=rootSVG.createSVGPoint()
		d.x = a.x + w
		d.y = a.y + h

		if (slope == 0)
		{
			e.x = d.x
			e.y=d.y + 10
		}
		else
		{
			e.x = d.x + 10,
			e.y=d.y - 10 / slope
		}

		//---Intersect the line d--e with centroid--a, which is the point on---
		//---the inflated convex polygon---
		//---http://en.wikipedia.org/wiki/Line-line_intersection---
		points_offset.push([
		((d.x * e.y - d.y * e.x) * (centroid[0] - a.x) - (d.x - e.x) * (centroid[0] * a.y - centroid[1] * a.x))
		/ ((d.x - e.x) * (centroid[1] - a.y) - (d.y - e.y) * (centroid[0] - a.x)),
		((d.x * e.y - d.y * e.x) * (centroid[1] - a.y) - (d.y - e.y) * (centroid[0] * a.y - centroid[1] * a.x))
		/ ((d.x - e.x) * (centroid[1] - a.y) - (d.y - e.y) * (centroid[0] - a.x))
		]);
	}

	return points_offset
}
</script>
<script>
document.addEventListener("onload",init(),false)
function init()
{
showSourceSVG()
showSourceJS()

}
</script>


</body>
</html>